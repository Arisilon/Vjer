- name: Get the ConstructConnect variables
  ansible.builtin.import_role:
    name: coco

- name: Download JFrog Artifacts
  block:
    - name: Create temporary directory
      register: jfrog_temp_dir
      ansible.windows.win_tempfile:
        state: directory
        prefix: bart-
        suffix: -jfrog
    - name: Set variables
      ansible.builtin.set_fact:
        artifact_package_path: "{{ jfrog_temp_dir.path }}/{{ artifact_package }}"
        artifact_target_backup: "{{ artifact_dest }}{{ backup_artifact_suffix }}"
    - name: Get the artifacts
      ansible.windows.win_get_url:
        url: "{{ artifact_store_url }}/{{ artifact_bucket }}/{{ artifact_package }}?skipUpdateStats=true"
        headers:
          Authorization: "Bearer {{ artifact_store_token }}"
        dest: "{{ artifact_package_path }}"
    - name: Test if target exists
      register: artifact_dest_stat
      ansible.windows.win_stat:
        path: "{{ artifact_dest }}"
    - name: Backup the target
      when: backup_artifact_target and artifact_dest_stat.stat.exists
      block:
        - name: Remove the old backup
          ansible.windows.win_file:
            path: "{{ artifact_target_backup }}"
            state: absent
        - name: Make a new backup
          ansible.windows.win_copy:
            src: "{{ artifact_dest }}\\"
            dest: "{{ artifact_target_backup }}"
            remote_src: true
    - name: Remove the target
      ansible.windows.win_file:
        path: "{{ artifact_dest }}"
        state: absent
      when: remove_artifact_target
    - name: Unzip the artifacts to the destination
      community.windows.win_unzip:
        src: "{{ artifact_package_path }}"
        dest: "{{ artifact_dest }}"
  always:
    - name: Remove temporary directory
      ansible.windows.win_file:
        path: "{{ jfrog_temp_dir.path }}"
        state: absent
      when: jfrog_temp_dir is defined
# cSpell:ignore tempfile
