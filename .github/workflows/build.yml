name: Vjer Build
on:
  push:
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  PYTHON_BUILD_VER: "3.11"
  ARTIFACTS_DIR: artifacts
  UNIT_TEST_DIR: unit_test_results
  VJER_ENV: development
  VJER_USE_FLIT: true

jobs:
  test:
    uses: tardis4500/shared-actions/.github/workflows/vjer.yml@main
    with:
      action: test
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - "3.11"
          - "3.12"

  build:
    needs:
      - test
    uses: tardis4500/shared-actions/.github/workflows/vjer.yml@main
    with:
      action: build
      os: ubuntu-latest
      python-version: ${{ env.PYTHON_BUILD_VER }}

  install-test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_BUILD_VER }}
      - uses: actions/download-artifact@v4
      - run: |
          set -eu
          pip install $ARTIFACTS_DIR/*.whl
          cd tests
          for test in test build release; do
              vjer $test
          done
        if: matrix.os != 'windows-latest'
      - run: |
          $ErrorActionPreference = 'Stop'
          Set-StrictMode -Version Latest
          pip install (Get-Item $env:ARTIFACTS_DIR\*.whl); git-stream list
          Set-Location tests
          foreach ($test in @('test', 'build', 'release')) {
              vjer $test }
        if: matrix.os == 'windows-latest'

  show-run-id:
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ github.run_id }}

# cSpell:ignore vjer venv tardis
